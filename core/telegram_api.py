import logging
import os
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from dotenv import load_dotenv
from aiogram.utils import executor

from core.buttons import BUTTON_MANAGE_MONEY, BUTTON_CANCEL

load_dotenv(os.path.dirname(__file__) + '/config/.env')
logging.basicConfig(level=logging.INFO)

memory = MemoryStorage()
bot=Bot(token=os.getenv('TELEGRAM'), parse_mode='html')
dp = Dispatcher(bot, storage=memory)

class UserInput(StatesGroup):
    input = State()

def launch():
    executor.start_polling(dp)
    
@dp.message_handler(commands=['start'])
async def start_bot(message: types.Message):
    await bot.send_sticker(message.from_user.id, sticker='CAACAgIAAxkBAAIxgmR_WduWkzBmN4xogt4TSPMCiukoAAI2FgACcmugS6XaTV2HP2QpLwQ')
    await message.answer('<b>–ü—Ä–∏–≤–µ—Ç!</b> üëã' \
                        '\n '\
                        '\n'\
                        '–Ø —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ –ø–æ —É—á–µ—Ç—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤ üí∏\n' \
                        '\n'\
                        '–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ãü§ë, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –±—é–¥–∂–µ—Ç –∏ –¥–æ—Å—Ç–∏–≥–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π üìà. '\
                        '–° –º–æ–µ–π –ø–æ–º–æ—â—å—é —Ç—ã —Å–º–æ–∂–µ—à—å –≤–µ—Å—Ç–∏ —É—á–µ—Ç –¥–æ—Ö–æ–¥–æ–≤ –∏ —Ä–∞—Å—Ö–æ–¥–æ–≤, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏.' \
                        '\n '\
                        '\n'\
                        '<b>–ë—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –≤–º–µ—Å—Ç–µ!</b> üòÅ', reply_markup=BUTTON_MANAGE_MONEY)

@dp.callback_query_handler(text='income')
async def start_bot(callback_query: types.CallbackQuery):
    await UserInput.input.set()
    await callback_query.message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ—Ö–æ–¥', reply_markup=BUTTON_CANCEL)
    await callback_query.answer()
    
@dp.message_handler(state=UserInput.input)
async def input_handler(message: types.Message, state: FSMContext):
    await message.answer(text=message.text)
    await state.finish()
    
@dp.callback_query_handler(text='expenditure')
async def start_bot(callback_query: types.CallbackQuery):
    await UserInput.input.set()
    await callback_query.message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–∞—Å—Ö–æ–¥', reply_markup=BUTTON_CANCEL)
    await callback_query.answer()
    
@dp.callback_query_handler(state='*', text='cancel')
async def cancel_input(callback_query: types.CallbackQuery, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await callback_query.answer()
        return
    
    logging.info(f'CANCEL, CURRENT STATE: {current_state}')
    await state.finish()
    await callback_query.message.answer('–û—Ç–º–µ–Ω–µ–Ω–æ', reply_markup=BUTTON_MANAGE_MONEY)
    await callback_query.answer()
